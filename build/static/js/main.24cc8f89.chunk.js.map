{"version":3,"sources":["Images/redBackgroundCal.png","TemporaryDrawer/TemporaryDrawer.js","MenuBar/MenuBar.js","Home/Home.js","App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TemporaryDrawer","state","left","toggleDrawer","side","open","_this","setState","Object","defineProperty","classes","this","props","sideList","react_default","a","createElement","className","list","List_default","map","text","index","ListItem_default","button","key","ListItemText_default","primary","Divider_default","Button_default","onClick","color","aria-label","Menu_default","Drawer_default","onClose","tabIndex","role","onKeyDown","React","Component","withStyles","theme","width","fullList","root","display","justifyContent","alignItems","icon","margin","spacing","unit","createMuiTheme","palette","main","secondary","MenuBar","styles","AppBar_default","position","Toolbar_default","IconButton_default","menuButton","src_TemporaryDrawer_TemporaryDrawer","flexGrow","grow","marginLeft","marginRight","Home","height","mode","alt","src","require","App","src_MenuBar_MenuBar","src_Home_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24cc8f89.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/redBackgroundCal.2e573fbc.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\nconst styles = theme => ({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n  icon: {\n    margin: theme.spacing.unit * 2,\n  },\n});\n\nclass TemporaryDrawer extends React.Component {\n  state = {\n    left: false,\n  };\n\n  toggleDrawer = (side, open) => () => {\n    this.setState({\n      [side]: open,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    const sideList = (\n      <div className={classes.list}>\n        <List>\n          {['Home', 'About App', 'About Developer',].map((text, index) => (\n            <ListItem button key={text}>\n              {/* <ListItemIcon>{index % 2 === 0 ? <HomeIcon className={classes.icon}/> : <MailIcon />}</ListItemIcon> */}\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n      </div>\n    );\n\n    return (\n      <div>\n        <Button onClick={this.toggleDrawer('left', true)} color=\"inherit\" aria-label=\"Menu\"><MenuIcon /></Button>\n        <Drawer open={this.state.left} onClose={this.toggleDrawer('left', false)}>\n          <div\n            tabIndex={0}\n            role=\"button\"\n            onClick={this.toggleDrawer('left', false)}\n            onKeyDown={this.toggleDrawer('left', false)}\n          >\n            {sideList}\n          </div>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nTemporaryDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TemporaryDrawer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport TemporaryDrawer from '../TemporaryDrawer/TemporaryDrawer';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n        main: '#d60e58',\n      },\n    secondary: {\n      main: '#6ec95c',\n    },\n  },\n});\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\nclass MenuBar extends React.Component {\n  render() {\n  const { classes } = this.props;\n  return (\n    <div className={classes.root}>\n    <MuiThemeProvider theme={theme}>\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                <TemporaryDrawer />\n          </IconButton>\n          {/* <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            24 Hour Cal\n          </Typography> */}\n          {/* <Button color=\"secondary\">Login</Button> */}\n        </Toolbar>\n      </AppBar>\n    </MuiThemeProvider>\n    </div>\n  );\n}\n}\n\nMenuBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MenuBar);\n","import React, { Component } from 'react';\nimport './Home.css'\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>24 Hour Cal</h1>\n          <p>Website and React Web Application Coming Soon!</p>\n          <img width={300} height={400} mode='fit' alt=\"big-cal\" src={require(\"../Images/redBackgroundCal.png\")} />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport './App.css';\nimport MenuBar from '../MenuBar/MenuBar';\nimport Home from '../Home/Home';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <MenuBar />\n        <Home />\n        <div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}